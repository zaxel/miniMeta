{"version":3,"sources":["redux/types.js","redux/action.js","Likes.js","Title.js","SingleComment.js","Comments.js","Spin.js","sea.jpg","App.js","redux/middleware.js","redux/likesReducer.js","redux/inputReducer.js","redux/commentsReducer.js","redux/appReducer.js","redux/rootReducer.js","index.js"],"names":["INCREMENT","DECREMENT","INPUT_TEXT","COMMENTS_CREATE","COMMENT_UPDATE","COMMENT_DELETE","COMMENTS_LOAD","LOADER_DISPLAY_ON","LOADER_DISPLAY_OFF","ERROR_DISPLAY_ON","ERROR_DISPLAY_OFF","loaderOff","type","errorOn","text","dispatch","setTimeout","connect","state","likes","likesReducer","onIncrementLikes","onDecrementLikes","props","className","onClick","Title","useSelector","inputReducer","useDispatch","onChange","e","inputText","target","value","placeholder","SingleComment","data","useState","commentText","setCommentText","id","useEffect","onSubmit","preventDefault","commentUpdate","commentDelete","hidden","Comments","textComment","setTextComment","comments","commentsReducer","a","fetch","response","json","jsonData","uniqid","commentCreate","length","map","res","Spin","spinner","appReducer","loading","color","height","width","visible","App","error","src","image","alt","badWords","initialState","rootReducer","combineReducers","action","commentsNew","name","itemIndex","findIndex","nextComments","slice","store","createStore","compose","applyMiddleware","thunk","next","some","includes","window","__REDUX_DEVTOOLS_EXTENSION__","f","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d0765c5e.chunk.js","sourcesContent":["export const INCREMENT = 'INCREMENT';\r\nexport const DECREMENT = 'DECREMENT';\r\nexport const INPUT_TEXT = 'INPUT_TEXT';\r\nexport const COMMENTS_CREATE = 'COMMENTS_CREATE';\r\nexport const COMMENT_UPDATE = 'COMMENT_UPDATE';\r\nexport const COMMENT_DELETE = 'COMMENT_DELETE';\r\n\r\nexport const COMMENTS_LOAD = 'COMMENTS_LOAD';\r\nexport const LOADER_DISPLAY_ON = 'LOADER_DISPLAY_ON';\r\nexport const LOADER_DISPLAY_OFF = 'LOADER_DISPLAY_OFF';\r\n\r\nexport const ERROR_DISPLAY_ON = 'ERROR_DISPLAY_ON';\r\nexport const ERROR_DISPLAY_OFF = 'ERROR_DISPLAY_OFF';","import { \r\n    INCREMENT, DECREMENT, INPUT_TEXT, \r\n    COMMENTS_CREATE, COMMENT_UPDATE, COMMENT_DELETE, \r\n    COMMENTS_LOAD, LOADER_DISPLAY_ON, LOADER_DISPLAY_OFF,\r\n    ERROR_DISPLAY_ON, ERROR_DISPLAY_OFF\r\n} from \"./types\";\r\n\r\nexport function incrementLikes(){\r\n    return {\r\n        type: INCREMENT\r\n    }\r\n}\r\nexport function decrementLikes(){\r\n    return {\r\n        type: DECREMENT\r\n    }\r\n}\r\nexport function inputText(text){\r\n    return {\r\n        type: INPUT_TEXT,\r\n        text\r\n    }\r\n}\r\nexport function commentCreate(text, id){\r\n    return {\r\n        type: COMMENTS_CREATE,\r\n        data: {text, id}\r\n    }\r\n}\r\nexport function commentUpdate(text, id){\r\n    return {\r\n        type: COMMENT_UPDATE,\r\n        data: {text, id}\r\n    }\r\n}\r\nexport function commentDelete(id){\r\n    return {\r\n        type: COMMENT_DELETE,\r\n        id\r\n    }\r\n}\r\nexport function loaderOn(){\r\n    return {\r\n        type: LOADER_DISPLAY_ON\r\n    }\r\n}\r\nexport function loaderOff(){\r\n    return {\r\n        type: LOADER_DISPLAY_OFF\r\n    }\r\n}\r\nexport function errorOn(text){\r\n    return dispatch => {\r\n        dispatch({\r\n            type: ERROR_DISPLAY_ON,\r\n            text\r\n        });\r\n\r\n        setTimeout(()=>{\r\n            dispatch(errorOff());\r\n        }, 2000);\r\n    }\r\n}\r\nexport function errorOff(){\r\n    return {\r\n        type: ERROR_DISPLAY_OFF,\r\n    }\r\n}\r\nexport function commentsLoad(){\r\n    return async dispatch => {\r\n        try{\r\n            dispatch(loaderOn());\r\n            const response = await fetch('https://jsonplaceholder.typicode.com/comments?_limit=10');\r\n            const jsonData = await response.json();\r\n            setTimeout(()=>{\r\n                dispatch({\r\n                    type: COMMENTS_LOAD,\r\n                    data: jsonData,\r\n                });\r\n                dispatch(loaderOff()); \r\n            }, 1000)\r\n        }\r\n        catch(err){\r\n            dispatch(errorOn('API error'));\r\n            dispatch(loaderOff());\r\n        }\r\n        \r\n        \r\n    }\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport { incrementLikes, decrementLikes } from \"./redux/action\"; \r\n\r\nfunction Likes(props){\r\n    return (\r\n        <div className='button-controls'>\r\n            <button onClick={props.onIncrementLikes}>‚ù§ {props.likes}</button>\r\n            <button onClick={props.onDecrementLikes}>Dislike</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    const { likesReducer } = state;\r\n    return {\r\n        likes: likesReducer.likes\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n    return {\r\n        onIncrementLikes: () => dispatch(incrementLikes()),\r\n        onDecrementLikes: () => dispatch(decrementLikes()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Likes);","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { inputText } from \"./redux/action\";\r\n\r\nfunction Title(props){\r\n    const text = useSelector(state => {\r\n        const { inputReducer } = state;\r\n        return inputReducer.text;\r\n    })\r\n    const dispatch = useDispatch();\r\n\r\n    const handleChange = (e) => {\r\n        // console.log('handle test >> ', e.target.value);\r\n        dispatch(inputText(e.target.value));\r\n    }\r\n\r\n    return (\r\n        <div className=\"card-title\">\r\n            <div className=\"card-title-top\">\r\n                <input type=\"text\" onChange={handleChange} placeholder=\"how things goes?\"/>\r\n            </div>\r\n            <p>{text}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Title;","import { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { commentUpdate, commentDelete } from \"./redux/action\";\r\n\r\nfunction SingleComment({data}){\r\n    const [commentText, setCommentText] = useState('');\r\n    const {text, id} = data;\r\n    const dispatch = useDispatch();\r\n\r\n    const handleUpdate = (e) => {\r\n        e.preventDefault();\r\n        dispatch(commentUpdate(commentText, id));\r\n    }\r\n    const handleDelete = (e) => {\r\n        e.preventDefault();\r\n        dispatch(commentDelete(id));\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(text){\r\n            setCommentText(text);\r\n        }\r\n    }, [text]);\r\n    const handleInput = (e) => {\r\n        setCommentText(e.target.value);\r\n    }\r\n    return(\r\n        <form onSubmit={handleUpdate} className=\"comments-item\">\r\n            <div onClick={handleDelete} className=\"comments-item-delete\">&times;</div>\r\n            <input type=\"text\" value={commentText} onChange={handleInput}/>\r\n            <input type=\"submit\" hidden/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default SingleComment;","import SingleComment from \"./SingleComment\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { commentCreate, commentsLoad } from \"./redux/action\";\r\nimport uniqid from \"uniqid\";\r\n\r\nfunction Comments(props){\r\n    const [textComment, setTextComment] = useState('');\r\n    const comments = useSelector(state => {\r\n        const { commentsReducer } = state;\r\n        return commentsReducer.comments;\r\n    })\r\n    const dispatch = useDispatch();\r\n\r\n    const handleInput = (e) => {\r\n        setTextComment(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const id = uniqid();\r\n        dispatch(commentCreate(textComment, id));\r\n    }\r\n    useEffect(() => {\r\n        dispatch(commentsLoad());\r\n    }, [dispatch]);\r\n\r\n    return(\r\n        <div className=\"card-comments\">\r\n            <form onSubmit={handleSubmit} className=\"comments-item-create\">\r\n                <input type=\"text\" value={textComment} onChange={handleInput} placeholder=\"please type your comment\"/>\r\n                <input type=\"submit\" hidden/>\r\n            </form>\r\n            {!!comments.length && comments.map(res => {\r\n                return <SingleComment key={res.id} data={res}/> \r\n            })}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comments;","import { useSelector } from \"react-redux\";\r\nimport Loader from 'react-loader-spinner';\r\n\r\nconst Spin = (props) => {\r\n    const spinner = useSelector(state => state.appReducer.loading);\r\n    return(\r\n        <div className='loader-styles'>\r\n            <Loader \r\n                type=\"TailSpin\"\r\n                color=\"#00BFFF\"\r\n                height={100}\r\n                width={100}\r\n                visible={spinner}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spin;","export default __webpack_public_path__ + \"static/media/sea.187dd9be.jpg\";","import { useSelector } from 'react-redux';\nimport './App.css';\nimport Likes from './Likes';\nimport Title from './Title';\nimport Comments from './Comments';\nimport Spin from './Spin';\nimport image from './sea.jpg'\n\nfunction App() {\n  const error = useSelector(state => state.appReducer.error);\n  return (\n    <div className=\"App\">\n      <div className=\"wrap\">\n      <Spin />\n        <div className=\"card\">\n          {error && (\n            <div className='error-message'>\n              {error}\n            </div>\n          )}\n          <div className=\"card-image\">\n            <img src={image} alt=\"ukrainian\"/>\n            <Title />\n            <Likes />\n          </div>\n          <Comments />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { COMMENTS_CREATE } from \"./types\";\r\nimport { errorOn } from \"./action\";\r\n\r\nconst badWords = ['dick', 'pussy'];\r\n\r\nexport function spamFilter({ dispatch }){\r\n    return function(next){\r\n        return function(action){\r\n            if(action.type === COMMENTS_CREATE){\r\n                const hasBadWords = badWords.some(res => action.data.text.includes(res));\r\n                if(hasBadWords){\r\n                    return dispatch(errorOn('Please respect other users'))\r\n                }\r\n            }\r\n            return next(action);\r\n        }\r\n    }\r\n}","import { INCREMENT, DECREMENT} from \"./types\";\r\n\r\nconst initialState = {\r\n    likes: 0\r\n}\r\nexport const likesReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case INCREMENT:\r\n            return{\r\n                ...state,\r\n                likes: state.likes + 1\r\n            }\r\n        case DECREMENT:\r\n            return{\r\n                ...state,\r\n                likes: state.likes - 1\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { INPUT_TEXT } from \"./types\";\r\n\r\nconst initialState = {\r\n    text: ''\r\n}\r\nexport const inputReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case INPUT_TEXT:\r\n            return{\r\n                ...state,\r\n                text: action.text\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { COMMENTS_CREATE, COMMENT_UPDATE, COMMENT_DELETE, COMMENTS_LOAD } from \"./types\";\r\n\r\nconst initialState = {\r\n    comments: []\r\n}\r\nexport const commentsReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case COMMENTS_CREATE:\r\n            return{\r\n                ...state,\r\n                comments: [...state.comments, action.data]\r\n            }\r\n        case COMMENTS_LOAD:\r\n            const commentsNew = action.data.map(res => {\r\n                return {\r\n                    text: res.name,\r\n                    id: res.id,\r\n                }\r\n            })\r\n            return{\r\n                ...state,\r\n                comments: commentsNew\r\n            }\r\n        case COMMENT_UPDATE:\r\n            const { data } = action;\r\n            const { comments } = state;\r\n            const itemIndex = comments.findIndex(res=> res.id === data.id);\r\n\r\n            const nextComments = [\r\n                ...comments.slice(0, itemIndex),\r\n                data,\r\n                ...comments.slice(itemIndex+1)\r\n            ]\r\n            return{\r\n                ...state,\r\n                comments: nextComments\r\n            }\r\n        case COMMENT_DELETE:\r\n            {const { id } = action;\r\n            const { comments } = state;\r\n            const itemIndex = comments.findIndex(res=> res.id === id);\r\n\r\n            const nextComments = [\r\n                ...comments.slice(0, itemIndex),\r\n                ...comments.slice(itemIndex+1)\r\n            ]\r\n            return{\r\n                ...state,\r\n                comments: nextComments\r\n            }}\r\n        default:\r\n            return state;\r\n    }\r\n}","import { LOADER_DISPLAY_ON, LOADER_DISPLAY_OFF, ERROR_DISPLAY_ON, ERROR_DISPLAY_OFF } from \"./types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    error: null\r\n}\r\nexport const appReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case LOADER_DISPLAY_ON:\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case LOADER_DISPLAY_OFF:\r\n            return{\r\n                ...state,\r\n                loading: false\r\n            }\r\n        case ERROR_DISPLAY_ON:\r\n            return{\r\n                ...state,\r\n                error: action.text\r\n            }\r\n        case ERROR_DISPLAY_OFF:\r\n            return{\r\n                ...state,\r\n                error: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { likesReducer } from \"./likesReducer\";\r\nimport { inputReducer } from \"./inputReducer\";\r\nimport { commentsReducer } from \"./commentsReducer\";\r\nimport { appReducer } from \"./appReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    likesReducer,\r\n    inputReducer,\r\n    commentsReducer,\r\n    appReducer,\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport thunk from 'redux-thunk';\nimport './index.css';\nimport App from './App';\nimport { spamFilter } from './redux/middleware';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { rootReducer } from './redux/rootReducer';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(rootReducer, compose(\n  applyMiddleware(\n    thunk,\n    spamFilter\n  ),\n  window.__REDUX_DEVTOOLS_EXTENSION__\n        ? window.__REDUX_DEVTOOLS_EXTENSION__()\n        : f => f\n));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  \n  document.getElementById('root')\n);\n"],"sourceRoot":""}